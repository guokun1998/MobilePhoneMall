<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hrbeu.mapper.GoodsMapper">
  <resultMap id="BaseResultMap" type="cn.hrbeu.po.Goods">
    <result column="goodsId" jdbcType="INTEGER" property="goodsid" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsname" />
    <result column="goodsPrice" jdbcType="DOUBLE" property="goodsprice" />
    <result column="goodsFactorydate" jdbcType="DATE" property="goodsfactorydate" />
    <result column="goodsRepairtime" jdbcType="DOUBLE" property="goodsrepairtime" />
    <result column="goodsColor" jdbcType="VARCHAR" property="goodscolor" />
    <result column="goodsType" jdbcType="VARCHAR" property="goodstype" />
    <result column="goodsOffprice" jdbcType="DOUBLE" property="goodsoffprice" />
    <result column="goodsCount" jdbcType="INTEGER" property="goodscount" />
    <result column="goodsPicture" jdbcType="VARCHAR" property="goodspicture" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goodsId, goodsName, goodsPrice, goodsFactorydate, goodsRepairtime, goodsColor, goodsType, 
    goodsOffprice, goodsCount, goodsPicture
  </sql>
  <select id="selectByExample" parameterType="cn.hrbeu.po.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.hrbeu.po.GoodsExample">
    delete from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hrbeu.po.Goods">
    insert into goods (goodsId, goodsName, goodsPrice, 
      goodsFactorydate, goodsRepairtime, goodsColor, 
      goodsType, goodsOffprice, goodsCount, 
      goodsPicture)
    values (#{goodsid,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{goodsprice,jdbcType=DOUBLE}, 
      #{goodsfactorydate,jdbcType=DATE}, #{goodsrepairtime,jdbcType=DOUBLE}, #{goodscolor,jdbcType=VARCHAR}, 
      #{goodstype,jdbcType=VARCHAR}, #{goodsoffprice,jdbcType=DOUBLE}, #{goodscount,jdbcType=INTEGER}, 
      #{goodspicture,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.hrbeu.po.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="goodsname != null">
        goodsName,
      </if>
      <if test="goodsprice != null">
        goodsPrice,
      </if>
      <if test="goodsfactorydate != null">
        goodsFactorydate,
      </if>
      <if test="goodsrepairtime != null">
        goodsRepairtime,
      </if>
      <if test="goodscolor != null">
        goodsColor,
      </if>
      <if test="goodstype != null">
        goodsType,
      </if>
      <if test="goodsoffprice != null">
        goodsOffprice,
      </if>
      <if test="goodscount != null">
        goodsCount,
      </if>
      <if test="goodspicture != null">
        goodsPicture,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="goodsprice != null">
        #{goodsprice,jdbcType=DOUBLE},
      </if>
      <if test="goodsfactorydate != null">
        #{goodsfactorydate,jdbcType=DATE},
      </if>
      <if test="goodsrepairtime != null">
        #{goodsrepairtime,jdbcType=DOUBLE},
      </if>
      <if test="goodscolor != null">
        #{goodscolor,jdbcType=VARCHAR},
      </if>
      <if test="goodstype != null">
        #{goodstype,jdbcType=VARCHAR},
      </if>
      <if test="goodsoffprice != null">
        #{goodsoffprice,jdbcType=DOUBLE},
      </if>
      <if test="goodscount != null">
        #{goodscount,jdbcType=INTEGER},
      </if>
      <if test="goodspicture != null">
        #{goodspicture,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hrbeu.po.GoodsExample" resultType="java.lang.Integer">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods
    <set>
      <if test="record.goodsid != null">
        goodsId = #{record.goodsid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsname != null">
        goodsName = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsprice != null">
        goodsPrice = #{record.goodsprice,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsfactorydate != null">
        goodsFactorydate = #{record.goodsfactorydate,jdbcType=DATE},
      </if>
      <if test="record.goodsrepairtime != null">
        goodsRepairtime = #{record.goodsrepairtime,jdbcType=DOUBLE},
      </if>
      <if test="record.goodscolor != null">
        goodsColor = #{record.goodscolor,jdbcType=VARCHAR},
      </if>
      <if test="record.goodstype != null">
        goodsType = #{record.goodstype,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsoffprice != null">
        goodsOffprice = #{record.goodsoffprice,jdbcType=DOUBLE},
      </if>
      <if test="record.goodscount != null">
        goodsCount = #{record.goodscount,jdbcType=INTEGER},
      </if>
      <if test="record.goodspicture != null">
        goodsPicture = #{record.goodspicture,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods
    set goodsId = #{record.goodsid,jdbcType=INTEGER},
      goodsName = #{record.goodsname,jdbcType=VARCHAR},
      goodsPrice = #{record.goodsprice,jdbcType=DOUBLE},
      goodsFactorydate = #{record.goodsfactorydate,jdbcType=DATE},
      goodsRepairtime = #{record.goodsrepairtime,jdbcType=DOUBLE},
      goodsColor = #{record.goodscolor,jdbcType=VARCHAR},
      goodsType = #{record.goodstype,jdbcType=VARCHAR},
      goodsOffprice = #{record.goodsoffprice,jdbcType=DOUBLE},
      goodsCount = #{record.goodscount,jdbcType=INTEGER},
      goodsPicture = #{record.goodspicture,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="cn.hrbeu.po.Goods">
    <id column="goodsID" jdbcType="INTEGER" property="goodsid" />
    <result column="GoodsName" jdbcType="VARCHAR" property="goodsname" />
    <result column="goodsType" jdbcType="VARCHAR" property="goodstype" />
    <result column="sellerID" jdbcType="INTEGER" property="sellerid" />
    <result column="goodsprice" jdbcType="DOUBLE" property="goodsprice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goodsID, GoodsName, goodsType, sellerID, goodsprice
  </sql>
  <select id="selectByExample" parameterType="cn.hrbeu.po.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where goodsID = #{goodsid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where goodsID = #{goodsid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hrbeu.po.GoodsExample">
    delete from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hrbeu.po.Goods">
    insert into goods (goodsID, GoodsName, goodsType, 
      sellerID, goodsprice)
    values (#{goodsid,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{goodstype,jdbcType=VARCHAR}, 
      #{sellerid,jdbcType=INTEGER}, #{goodsprice,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="cn.hrbeu.po.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        goodsID,
      </if>
      <if test="goodsname != null">
        GoodsName,
      </if>
      <if test="goodstype != null">
        goodsType,
      </if>
      <if test="sellerid != null">
        sellerID,
      </if>
      <if test="goodsprice != null">
        goodsprice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="goodstype != null">
        #{goodstype,jdbcType=VARCHAR},
      </if>
      <if test="sellerid != null">
        #{sellerid,jdbcType=INTEGER},
      </if>
      <if test="goodsprice != null">
        #{goodsprice,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hrbeu.po.GoodsExample" resultType="java.lang.Integer">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods
    <set>
      <if test="record.goodsid != null">
        goodsID = #{record.goodsid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsname != null">
        GoodsName = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.goodstype != null">
        goodsType = #{record.goodstype,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerid != null">
        sellerID = #{record.sellerid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsprice != null">
        goodsprice = #{record.goodsprice,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods
    set goodsID = #{record.goodsid,jdbcType=INTEGER},
      GoodsName = #{record.goodsname,jdbcType=VARCHAR},
      goodsType = #{record.goodstype,jdbcType=VARCHAR},
      sellerID = #{record.sellerid,jdbcType=INTEGER},
      goodsprice = #{record.goodsprice,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hrbeu.po.Goods">
    update goods
    <set>
      <if test="goodsname != null">
        GoodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="goodstype != null">
        goodsType = #{goodstype,jdbcType=VARCHAR},
      </if>
      <if test="sellerid != null">
        sellerID = #{sellerid,jdbcType=INTEGER},
      </if>
      <if test="goodsprice != null">
        goodsprice = #{goodsprice,jdbcType=DOUBLE},
      </if>
    </set>
    where goodsID = #{goodsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hrbeu.po.Goods">
    update goods
    set GoodsName = #{goodsname,jdbcType=VARCHAR},
      goodsType = #{goodstype,jdbcType=VARCHAR},
      sellerID = #{sellerid,jdbcType=INTEGER},
      goodsprice = #{goodsprice,jdbcType=DOUBLE}
    where goodsID = #{goodsid,jdbcType=INTEGER}
  </update>
</mapper>