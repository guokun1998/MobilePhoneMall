package cn.hrbeu.po;

import java.util.ArrayList;
import java.util.List;

public class ShoppingcartdetailExample {
    protected String orderByClause;

    protected boolean distinct;

    protected List<Criteria> oredCriteria;

    public ShoppingcartdetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        return orderByClause;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andShoppingcartdetailidIsNull() {
            addCriterion("shoppingcartdetailId is null");
            return (Criteria) this;
        }

        public Criteria andShoppingcartdetailidIsNotNull() {
            addCriterion("shoppingcartdetailId is not null");
            return (Criteria) this;
        }

        public Criteria andShoppingcartdetailidEqualTo(Integer value) {
            addCriterion("shoppingcartdetailId =", value, "shoppingcartdetailid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartdetailidNotEqualTo(Integer value) {
            addCriterion("shoppingcartdetailId <>", value, "shoppingcartdetailid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartdetailidGreaterThan(Integer value) {
            addCriterion("shoppingcartdetailId >", value, "shoppingcartdetailid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartdetailidGreaterThanOrEqualTo(Integer value) {
            addCriterion("shoppingcartdetailId >=", value, "shoppingcartdetailid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartdetailidLessThan(Integer value) {
            addCriterion("shoppingcartdetailId <", value, "shoppingcartdetailid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartdetailidLessThanOrEqualTo(Integer value) {
            addCriterion("shoppingcartdetailId <=", value, "shoppingcartdetailid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartdetailidIn(List<Integer> values) {
            addCriterion("shoppingcartdetailId in", values, "shoppingcartdetailid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartdetailidNotIn(List<Integer> values) {
            addCriterion("shoppingcartdetailId not in", values, "shoppingcartdetailid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartdetailidBetween(Integer value1, Integer value2) {
            addCriterion("shoppingcartdetailId between", value1, value2, "shoppingcartdetailid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartdetailidNotBetween(Integer value1, Integer value2) {
            addCriterion("shoppingcartdetailId not between", value1, value2, "shoppingcartdetailid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartidIsNull() {
            addCriterion("shoppingcartId is null");
            return (Criteria) this;
        }

        public Criteria andShoppingcartidIsNotNull() {
            addCriterion("shoppingcartId is not null");
            return (Criteria) this;
        }

        public Criteria andShoppingcartidEqualTo(Integer value) {
            addCriterion("shoppingcartId =", value, "shoppingcartid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartidNotEqualTo(Integer value) {
            addCriterion("shoppingcartId <>", value, "shoppingcartid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartidGreaterThan(Integer value) {
            addCriterion("shoppingcartId >", value, "shoppingcartid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartidGreaterThanOrEqualTo(Integer value) {
            addCriterion("shoppingcartId >=", value, "shoppingcartid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartidLessThan(Integer value) {
            addCriterion("shoppingcartId <", value, "shoppingcartid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartidLessThanOrEqualTo(Integer value) {
            addCriterion("shoppingcartId <=", value, "shoppingcartid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartidIn(List<Integer> values) {
            addCriterion("shoppingcartId in", values, "shoppingcartid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartidNotIn(List<Integer> values) {
            addCriterion("shoppingcartId not in", values, "shoppingcartid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartidBetween(Integer value1, Integer value2) {
            addCriterion("shoppingcartId between", value1, value2, "shoppingcartid");
            return (Criteria) this;
        }

        public Criteria andShoppingcartidNotBetween(Integer value1, Integer value2) {
            addCriterion("shoppingcartId not between", value1, value2, "shoppingcartid");
            return (Criteria) this;
        }

        public Criteria andGoodsidIsNull() {
            addCriterion("goodsId is null");
            return (Criteria) this;
        }

        public Criteria andGoodsidIsNotNull() {
            addCriterion("goodsId is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsidEqualTo(Integer value) {
            addCriterion("goodsId =", value, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidNotEqualTo(Integer value) {
            addCriterion("goodsId <>", value, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidGreaterThan(Integer value) {
            addCriterion("goodsId >", value, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidGreaterThanOrEqualTo(Integer value) {
            addCriterion("goodsId >=", value, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidLessThan(Integer value) {
            addCriterion("goodsId <", value, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidLessThanOrEqualTo(Integer value) {
            addCriterion("goodsId <=", value, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidIn(List<Integer> values) {
            addCriterion("goodsId in", values, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidNotIn(List<Integer> values) {
            addCriterion("goodsId not in", values, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidBetween(Integer value1, Integer value2) {
            addCriterion("goodsId between", value1, value2, "goodsid");
            return (Criteria) this;
        }

        public Criteria andGoodsidNotBetween(Integer value1, Integer value2) {
            addCriterion("goodsId not between", value1, value2, "goodsid");
            return (Criteria) this;
        }

        public Criteria andBuygoodscountIsNull() {
            addCriterion("buyGoodsCount is null");
            return (Criteria) this;
        }

        public Criteria andBuygoodscountIsNotNull() {
            addCriterion("buyGoodsCount is not null");
            return (Criteria) this;
        }

        public Criteria andBuygoodscountEqualTo(Integer value) {
            addCriterion("buyGoodsCount =", value, "buygoodscount");
            return (Criteria) this;
        }

        public Criteria andBuygoodscountNotEqualTo(Integer value) {
            addCriterion("buyGoodsCount <>", value, "buygoodscount");
            return (Criteria) this;
        }

        public Criteria andBuygoodscountGreaterThan(Integer value) {
            addCriterion("buyGoodsCount >", value, "buygoodscount");
            return (Criteria) this;
        }

        public Criteria andBuygoodscountGreaterThanOrEqualTo(Integer value) {
            addCriterion("buyGoodsCount >=", value, "buygoodscount");
            return (Criteria) this;
        }

        public Criteria andBuygoodscountLessThan(Integer value) {
            addCriterion("buyGoodsCount <", value, "buygoodscount");
            return (Criteria) this;
        }

        public Criteria andBuygoodscountLessThanOrEqualTo(Integer value) {
            addCriterion("buyGoodsCount <=", value, "buygoodscount");
            return (Criteria) this;
        }

        public Criteria andBuygoodscountIn(List<Integer> values) {
            addCriterion("buyGoodsCount in", values, "buygoodscount");
            return (Criteria) this;
        }

        public Criteria andBuygoodscountNotIn(List<Integer> values) {
            addCriterion("buyGoodsCount not in", values, "buygoodscount");
            return (Criteria) this;
        }

        public Criteria andBuygoodscountBetween(Integer value1, Integer value2) {
            addCriterion("buyGoodsCount between", value1, value2, "buygoodscount");
            return (Criteria) this;
        }

        public Criteria andBuygoodscountNotBetween(Integer value1, Integer value2) {
            addCriterion("buyGoodsCount not between", value1, value2, "buygoodscount");
            return (Criteria) this;
        }
    }

    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}